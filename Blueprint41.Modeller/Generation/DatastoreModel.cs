// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Blueprint41.Modeller.Generation
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Collections;
    using System.Collections.Generic;
    using Blueprint41.Modeller.Schemas;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    internal partial class DatastoreModel : GenerationBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 10 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
 foreach (var functionalId in FunctionalIds)
{

            
            #line default
            #line hidden
            
            #line 13 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

    if(functionalId.IsDefault == true)
    {

            
            #line default
            #line hidden
            this.Write("    FunctionalIds.Default = FunctionalIds.New(\"");
            
            #line 17 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 17 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Value));
            
            #line default
            #line hidden
            this.Write("\", IdFormat.");
            
            #line 17 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Type));
            
            #line default
            #line hidden
            this.Write(", 0);\r\n");
            
            #line 18 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
 
    } else {

            
            #line default
            #line hidden
            this.Write("    FunctionalId ");
            
            #line 21 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write("Id = FunctionalIds.New(\"");
            
            #line 21 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 21 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Value));
            
            #line default
            #line hidden
            this.Write("\", IdFormat.");
            
            #line 21 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(functionalId.Type));
            
            #line default
            #line hidden
            this.Write(", 0);\r\n");
            
            #line 22 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
        
   } // end of else

            
            #line default
            #line hidden
            
            #line 25 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
 
} // end of foreach functional id

            
            #line default
            #line hidden
            this.Write("\t\t\r\n");
            
            #line 29 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

foreach (var entity in Entities)
{
    if(string.IsNullOrEmpty(entity.Inherits))
    {
        if (string.IsNullOrEmpty(entity.FunctionalId))
        {

            
            #line default
            #line hidden
            this.Write("        Entities.New(\"");
            
            #line 37 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\")\r\n");
            
            #line 38 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        } 
        else 
        {
            var ids = FunctionalIds.Where(x => x.Guid == entity.FunctionalId && x.IsDefault == false).ToList();
            string entityFunctionalId = ids.Count > 0 ?  ", " + ids.First().Name.ToLower() + "Id": "";

            
            #line default
            #line hidden
            this.Write("        Entities.New(\"");
            
            #line 45 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 45 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityFunctionalId));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 46 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
    }
    else
    {
        string inheritedEntityName = Modeller.Model.Entities.Entity.Where(x => x.Guid == entity.Inherits).First().Name;			
        if(string.IsNullOrEmpty(entity.FunctionalId))
        {

            
            #line default
            #line hidden
            this.Write("        Entities.New(\"");
            
            #line 55 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\", Entities[\"");
            
            #line 55 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inheritedEntityName));
            
            #line default
            #line hidden
            this.Write("\"])\r\n");
            
            #line 56 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
        else
        {
            var ids = FunctionalIds.Where(x => x.Guid == entity.FunctionalId && x.IsDefault == false).ToList();
            string entityFunctionalId = ids.Count > 0 ?  ids.First().Name.ToLower() + "Id, ": "";

            
            #line default
            #line hidden
            this.Write("        Entities.New(\"");
            
            #line 63 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 63 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityFunctionalId));
            
            #line default
            #line hidden
            this.Write("Entities[\"");
            
            #line 63 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inheritedEntityName));
            
            #line default
            #line hidden
            this.Write("\"])\r\n");
            
            #line 64 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
				
        }
        if(!string.IsNullOrEmpty(entity.Summary))
        {

            
            #line default
            #line hidden
            this.Write("                .Summary(\"");
            
            #line 69 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Summary.Replace("\"", "\\\"")));
            
            #line default
            #line hidden
            this.Write("\")\r\n");
            
            #line 70 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
    }
    if(entity.Abstract)
    {

            
            #line default
            #line hidden
            this.Write("                .Abstract(true)\r\n");
            
            #line 77 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

    }
    if(entity.Virtual)
    {

            
            #line default
            #line hidden
            this.Write("                .Virtual(true)\r\n");
            
            #line 83 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

    }
    foreach (var primitive in entity.Primitive)
    {
        if(!string.IsNullOrEmpty(primitive.Index) && !primitive.Index.Equals("None"))
        {

            
            #line default
            #line hidden
            this.Write("                .AddProperty(\"");
            
            #line 90 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Name));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 90 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Type));
            
            #line default
            #line hidden
            this.Write("), ");
            
            #line 90 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!primitive.Nullable?"false,":""));
            
            #line default
            #line hidden
            this.Write(" IndexType.");
            
            #line 90 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Index));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 91 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("                .AddProperty(\"");
            
            #line 96 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Name));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 96 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Type ?? ""));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 96 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(!primitive.Nullable?", false":""));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 97 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
        if(primitive.IsKey)
        {

            
            #line default
            #line hidden
            this.Write("                .SetKey(\"");
            
            #line 102 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(primitive.Name));
            
            #line default
            #line hidden
            this.Write("\", true)\r\n");
            
            #line 103 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
    } // end of foreach primitive
    Write(string.Join($"{Environment.NewLine}", entity.Primitive.Where(x => x.IsFullTextProperty == true).Select(x =>".SetFullTextProperty(\""+ x.Name+"\")").ToList()));
    GenerationEnvironment = TrimEnd(GenerationEnvironment);
    Write(";\r\n\r\n");

            
            #line default
            #line hidden
            
            #line 110 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

} // end foreach entities
foreach (var relationship in Relationships)
{
    bool hasRelationshipSourceName = string.IsNullOrEmpty(relationship.Source.Name);
    bool hasRelationshipTargetName = string.IsNullOrEmpty(relationship.Target.Name);

    string postfix = hasRelationshipTargetName ? ";" : "";
    if(string.IsNullOrEmpty(relationship.Name))
    {

            
            #line default
            #line hidden
            this.Write("\r\n        Relationship ");
            
            #line 122 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Name));
            
            #line default
            #line hidden
            this.Write(" = Relations.New(Entities[\"");
            
            #line 122 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Label));
            
            #line default
            #line hidden
            this.Write("\"], ");
            
            #line 122 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Label != null ? $"Entities[\"{relationship.Target.Label}\"]" : "null"));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 122 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Type));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 123 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

    }
    else
    {

            
            #line default
            #line hidden
            this.Write("\r\n        Relationship ");
            
            #line 129 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Name));
            
            #line default
            #line hidden
            this.Write(" = Relations.New(Entities[\"");
            
            #line 129 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Label));
            
            #line default
            #line hidden
            this.Write("\"], ");
            
            #line 129 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Label != null ? $"Entities[\"{relationship.Target.Label}\"]" : "null"));
            
            #line default
            #line hidden
            this.Write(", \"");
            
            #line 129 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 129 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Type));
            
            #line default
            #line hidden
            this.Write("\")\r\n");
            
            #line 130 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

    }
    if(!hasRelationshipSourceName)
    {
        if(relationship.Source.Nullable)
            {

            
            #line default
            #line hidden
            this.Write("                .SetInProperty(\"");
            
            #line 137 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Name));
            
            #line default
            #line hidden
            this.Write("\", PropertyType.");
            
            #line 137 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Type));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 137 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postfix));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 138 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

			}
			else
            {

            
            #line default
            #line hidden
            this.Write("                .SetInProperty(\"");
            
            #line 143 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Name));
            
            #line default
            #line hidden
            this.Write("\", PropertyType.");
            
            #line 143 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Type));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 143 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Source.Nullable.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 143 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(postfix));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 144 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

            }
    }
    if(!hasRelationshipTargetName)
    {
        if(relationship.Target.Nullable)
        {

            
            #line default
            #line hidden
            this.Write("                .SetOutProperty(\"");
            
            #line 152 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Name));
            
            #line default
            #line hidden
            this.Write("\", PropertyType.");
            
            #line 152 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Type));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 153 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
		else
        {

            
            #line default
            #line hidden
            this.Write("                .SetOutProperty(\"");
            
            #line 158 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Name));
            
            #line default
            #line hidden
            this.Write("\", PropertyType.");
            
            #line 158 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Type));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 158 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relationship.Target.Nullable.ToString().ToLower()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 159 "D:\_Xirqlz\blueprint41\Blueprint41.Modeller\Generation\DatastoreModel.tt"

        }
    }
    else
    {
    }
} // end of foreach entities

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
