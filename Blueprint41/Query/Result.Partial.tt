<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var listTypes = new []
	{
		( listType: "AliasListResult",    resultType: "AliasResult",    underlyingType: null       ),
		( listType: "MiscListResult",     resultType: "MiscResult",     underlyingType: "object"   ),
		( listType: "StringListResult",   resultType: "StringResult",   underlyingType: "string"   ),
		( listType: "BooleanListResult",  resultType: "BooleanResult",  underlyingType: "bool"     ),
		( listType: "DateTimeListResult", resultType: "DateTimeResult", underlyingType: "DateTime" ),
		( listType: "FloatListResult",    resultType: "FloatResult",    underlyingType: "double"   ),
		( listType: "NumericListResult",  resultType: "NumericResult",  underlyingType: "long"     ),
	};
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;

namespace Blueprint41.Query
{
<#
	foreach ((string listType, string resultType, string underlyingType) in listTypes)
	{
#>
	public partial class <#= resultType #>
	{
        public <#= listType #> Collect()
        {
            return new <#= listType #>(this, t => t.FnCollect);
        }
        public <#= listType #> CollectDistinct()
        {
            return new <#= listType #>(this, t => t.FnCollectDistinct);
        }
	}
<#
	}
#>
}